import java.text.SimpleDateFormat

plugins {
    id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
    id "org.springframework.boot" version "${spring_boot_version}" apply false
    id "com.gorylenko.gradle-git-properties" version "2.2.4" apply false
    id "groovy-gradle-plugin"
}

def javaVersion = System.getProperty("java.version")
if (!javaVersion.startsWith("11")) {
    throw new RuntimeException("Incompatible JRE version: " + javaVersion + ". Use JRE 11 instead.")
}

subprojects { project ->
    group "io.github.gcdd1993"
    version root_version

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"

    if (project.name == "gulimall-common") {
        apply from: "${rootDir}/gradle/maven-publish.gradle"
    } else {
        apply from: "${rootDir}/gradle/docker.gradle"
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    jar {
        enabled = true
        manifest {
            attributes(
                "dependency-Title": project.name,
                "dependency-Version": project.version,
                "Built-By": System.properties["user.name"],
                "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Created-By": "Gradle ${gradle.gradleVersion}",
                "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
            )
        }
    }

    dependencies {
        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}")
            mavenBom("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${spring_cloud_alibaba_version}")
        }
        dependencies {
            dependency("org.projectlombok:lombok:$lombok_version")
            dependency("com.baomidou:mybatis-plus-boot-starter:$mybatis_plus_version")
            dependency("org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatis_version")
            dependency("commons-lang:commons-lang:$commons_lang_version")
            dependency("javax.servlet:servlet-api:$javax_servlet_version")
            dependency("com.alibaba:druid-spring-boot-starter:$druid_version")
            dependency("org.quartz-scheduler:quartz:$quartz_version")
            dependency("commons-fileupload:commons-fileupload:$commons_fileupload_version")
            dependency("commons-io:commons-io:${commons_io_version}")
            dependency("commons-codec:commons-codec:${commons_codec_version}")
            dependency("commons-configuration:commons-configuration:${commons_configuration_version}")
            dependency("org.apache.shiro:shiro-core:${shiro_version}")
            dependency("org.apache.shiro:shiro-spring:${shiro_version}")
            dependency("io.jsonwebtoken:jjwt:${jwt_version}")
            dependency("com.github.axet:kaptcha:${kaptcha_version}")
            dependency("io.springfox:springfox-swagger2:${swagger_version}")
            dependency("io.springfox:springfox-swagger-ui:${swagger_version}")
            dependency("com.qiniu:qiniu-java-sdk:${qiniu_version}")
            dependency("com.aliyun.oss:aliyun-sdk-oss:${aliyun_oss_version}")
            dependency("com.qcloud:cos_api:${qcloud_cos_version}")
            dependency("joda-time:joda-time:${joda_time_version}")
            dependency("com.alibaba:fastjson:${fastjson_version}")
            dependency("cn.hutool:hutool-all:${hutool_version}")
            dependency("com.oracle.database.jdbc:ojdbc6:$ojdbc6_version")
            dependency("com.microsoft.sqlserver:sqljdbc4:$sqljdbc4_version")
            dependency("org.apache.velocity:velocity:$velocity_version")
            dependency("com.github.pagehelper:pagehelper-spring-boot-starter:$pagehelper_version")
        }
    }

    test {
        useJUnitPlatform()
    }

}
